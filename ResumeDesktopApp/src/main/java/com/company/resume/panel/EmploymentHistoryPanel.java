/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.company.resume.panel;

import com.company.dao.inter.EmploymentHistoryDaoInter;
import com.company.entity.EmploymentHistory;
import com.company.main.Context;
import com.company.resume.config.Config;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 99470
 */
public class EmploymentHistoryPanel extends javax.swing.JPanel {

    private final SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    private EmploymentHistoryDaoInter empHistoryDao = Context.instanceEmploymentHistoryDao();
    private List<EmploymentHistory> emps;

    /**
     * Creates new form EmploymentHistoryPanel
     */
    public EmploymentHistoryPanel() {
        initComponents();
    }

    public void fillUserComponents() {
        fillTable();
    }

    private void fillTable() {
        emps = empHistoryDao.getAllEmploymentHistoryByUserId(Config.loggedInUser.getId());

        Vector<Vector> rows = new Vector<>();
        for (EmploymentHistory emp : emps) {
            Vector row = new Vector();
            row.add(emp.getHeader());
            row.add(emp.getBeginDate());
            if (emp.getEndDate() != null) {
                row.add(emp.getEndDate());
            } else {
                row.add("not finished");
            }
            row.add(emp.getJobDescription());
            rows.add(row);
        }

        DefaultTableModel model = new DefaultTableModel(rows, new Vector(Arrays.asList("Header", "Begin date", "End date", "Job description")));
        tblEmploymentHistory.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtEndDate = new javax.swing.JTextField();
        txtBeginDate = new javax.swing.JTextField();
        txtHeader = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaJobDesc = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblEmploymentHistory = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        jLabel1.setText("Header");

        jLabel2.setText("Begin date");

        jLabel3.setText("End date");

        txtBeginDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBeginDateActionPerformed(evt);
            }
        });

        txtAreaJobDesc.setColumns(20);
        txtAreaJobDesc.setRows(5);
        jScrollPane2.setViewportView(txtAreaJobDesc);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBeginDate, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(313, 313, 313)))
                .addContainerGap())
            .addComponent(jScrollPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtBeginDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2))
        );

        tblEmploymentHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblEmploymentHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmploymentHistoryMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblEmploymentHistory);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnAdd.setText("+");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("-");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane3)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDelete)
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnDelete)
                    .addComponent(btnSave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtBeginDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBeginDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBeginDateActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            String header = txtHeader.getText();
            Date beginDate = new Date(sdf.parse(txtBeginDate.getText()).getTime());
            String jobDescription = txtAreaJobDesc.getText();
            Date endDate = null;
            if (!txtEndDate.getText().trim().isEmpty() && !txtEndDate.getText().equals("not finished")) {
                endDate = new Date(sdf.parse(txtEndDate.getText()).getTime());
            } else {
                endDate = null;
            }
            EmploymentHistory emp = new EmploymentHistory(null, header, beginDate, endDate, jobDescription, Config.loggedInUser);
            empHistoryDao.addEmploymentHistory(emp);
            fillTable();
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int index = tblEmploymentHistory.getSelectedRow();
        empHistoryDao.removeEmploymentHistory(emps.get(index).getId());
        fillTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            int index = tblEmploymentHistory.getSelectedRow();
            EmploymentHistory emp = emps.get(index);
            String header = txtHeader.getText();
            Date beginDate = new Date(sdf.parse(txtBeginDate.getText()).getTime());
            String jobDescription = txtAreaJobDesc.getText();
            emp.setHeader(header);
            emp.setBeginDate(beginDate);
            if (!txtEndDate.getText().isEmpty() && !txtEndDate.getText().equals("not finished")) {
                Date endDate = new Date(sdf.parse(txtEndDate.getText()).getTime());
                emp.setEndDate(endDate);
            }
            emp.setJobDescription(jobDescription);
            empHistoryDao.updateEmploymentHistory(emp);
            fillTable();
        } catch (ParseException ex) {
            Logger.getLogger(EmploymentHistoryPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void tblEmploymentHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmploymentHistoryMouseClicked
        EmploymentHistory emp = emps.get(tblEmploymentHistory.getSelectedRow());
        txtHeader.setText(emp.getHeader());
        txtBeginDate.setText(sdf.format(emp.getBeginDate()));
        if (emp.getEndDate() != null) {
            txtEndDate.setText(sdf.format(emp.getEndDate()));
        } else {
            txtEndDate.setText("not finished");
        }
        txtAreaJobDesc.setText(emp.getJobDescription());
    }//GEN-LAST:event_tblEmploymentHistoryMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblEmploymentHistory;
    private javax.swing.JTextArea txtAreaJobDesc;
    private javax.swing.JTextField txtBeginDate;
    private javax.swing.JTextField txtEndDate;
    private javax.swing.JTextField txtHeader;
    // End of variables declaration//GEN-END:variables
}
